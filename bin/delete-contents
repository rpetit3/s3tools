#! /usr/bin/env python
"""
delete-contents.

Delete a list of contents within a given file.
"""

if __name__ == '__main__':
    import sys
    import argparse as ap
    from boto.s3.connection import S3Connection

    from aws_keys import AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY

    parser = ap.ArgumentParser(
        prog='delete-contents',
        conflict_handler='resolve',
        description='Delete a list of contents within a given file.')
    group1 = parser.add_argument_group('Options', '')
    group1.add_argument('--file', metavar="STR", type=str, required=True,
                        help='File containing list of contents to delete.')
    group1.add_argument('--recursive', action='store_true', default=False,
                        help='File contains directories to remove.')
    group1.add_argument('--bucket', metavar="STR", type=str, required=True,
                        help='Bucket to read contents of.')
    group1.add_argument('-h', '--help', action='help',
                        help='Show this help message and exit')

    if len(sys.argv) == 1:
        parser.print_usage()
        sys.exit(1)

    args = parser.parse_args()

    conn = S3Connection(AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY)
    bucket = conn.get_bucket(args.bucket)

    fh = open(args.file, "r")
    for line in fh:
        content = line.rstrip()

        if not args.recursive:
            key = bucket.get_key(content)
            if key:
                print "{0}\tdeleted".format(content)
                key.delete()
            else:
                print "{0}\tdoes not exist".format(content)
        else:
            rs = bucket.list(content)
            for key in rs:
                print "{0}\tdeleted".format(key.name)
                key.delete()
    fh.close()
